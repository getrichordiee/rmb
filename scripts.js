// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
const registerBtn = document.getElementById('registerBtn');
const accessBtn = document.getElementById('accessBtn');
const signalsContainer = document.getElementById('signals');
const rocketSignal = document.getElementById('rocketSignal');
const minesSignal = document.getElementById('minesSignal');
const signalResult = document.getElementById('signalResult');
const signalText = document.getElementById('signalText');
const getRocketSignalBtn = document.getElementById('getRocketSignalBtn');
const getMinesSignalBtn = document.getElementById('getMinesSignalBtn');
const backToSignalsBtn = document.getElementById('backToSignalsBtn');
const backToSignalsBtn2 = document.getElementById('backToSignalsBtn2');
const backToMenuBtn = document.getElementById('backToMenuBtn');
const newSignalBtn = document.getElementById('newSignalBtn');

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
function showElement(element) {
    element.classList.add('show');
}

function hideElement(element) {
    element.classList.remove('show');
}

// –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
accessBtn.addEventListener('click', () => {
    hideElement(registerBtn);
    hideElement(accessBtn);
    showElement(signalsContainer);
});

// –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∏–≥–Ω–∞–ª–∞ –†–∞–∫–µ—Ç—ã
rocketSignal.addEventListener('click', () => {
    hideElement(signalsContainer);
    showElement(rocketSignal);
});

// –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∏–≥–Ω–∞–ª–∞ –ú–∏–Ω—ã
minesSignal.addEventListener('click', () => {
    hideElement(signalsContainer);
    showElement(minesSignal);
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª –†–∞–∫–µ—Ç—ã
getRocketSignalBtn.addEventListener('click', () => {
    generateSignal('rocket');
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª –ú–∏–Ω—ã
getMinesSignalBtn.addEventListener('click', () => {
    generateSignal('mines');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–∞
function generateSignal(type) {
    hideElement(rocketSignal);
    hideElement(minesSignal);
    showElement(signalResult);

    if (type === 'rocket') {
        const coefficient = (Math.random() * (20 - 1.01) + 1.01).toFixed(2);
        const chance = Math.max(19, Math.floor(100 - coefficient * 5));
        const duration = Math.floor(Math.random() * (240 - 15 + 1)) + 15;

        signalText.innerHTML = `üí∞–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: ${coefficient}x<br>üòà–®–∞–Ω—Å: ${chance}%<br>‚è±Ô∏è–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${duration} —Å–µ–∫—É–Ω–¥`;
    } else if (type === 'mines') {
        const numMines = Math.random() > 0.5 ? 1 : 3;
        const numStars = numMines === 1 ? 9 : 6;
        const matrix = Array.from({ length: 5 }, () => Array(5).fill("üü¶"));
        const stars = [];

        while (stars.length < numStars) {
            const randPos = Math.floor(Math.random() * 25);
            if (!stars.includes(randPos)) {
                stars.push(randPos);
                matrix[Math.floor(randPos / 5)][randPos % 5] = "‚≠ê";
            }
        }

        const matrixStr = matrix.map(row => row.join('')).join('\n');
        const duration = Math.floor(Math.random() * (240 - 15 + 1)) + 15;

        signalText.innerHTML = `üí£–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω: ${numMines}<br>‚è±Ô∏è–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${duration} —Å–µ–∫—É–Ω–¥<br><br>‚≠ê–í—ã–∏–≥—Ä—ã—à–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:<br>${matrixStr}`;
    }
}

// –ö–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –∏ –Ω–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
backToMenuBtn.addEventListener('click', () => {
    hideElement(signalResult);
    showElement(signalsContainer);
});

newSignalBtn.addEventListener('click', () => {
    generateSignal(rocketSignal.classList.contains('show') ? 'rocket' : 'mines');
});
